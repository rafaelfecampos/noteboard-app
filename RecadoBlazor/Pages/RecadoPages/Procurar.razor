@page "/recados/procurar"
@inject HttpClient Http
@using RecadoModel

<PageTitle>Buscar Recados</PageTitle>

<h1>Buscar Recados</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm Model="recado" OnValidSubmit="ProcurarPorRemetente">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="remetente" class="form-label">Remetente:</label>
                <InputText id="remetente" @bind-Value="remetente" class="form-control" />
            </div>
            <button type="submit" class="btn btn-primary">Buscar</button>
        </EditForm>
    </div>
    <div class="col-md-4">
        <EditForm Model="recado" OnValidSubmit="ProcurarPorDestinatario">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="destinatario" class="form-label">Destinario:</label>
                <InputText id="destinatario" @bind-Value="destinatario" class="form-control" />
            </div>
            <button type="submit" class="btn btn-primary">Buscar</button>
        </EditForm>
    </div>
</div>

@if (recados != null)
{
    <div class="mt-4">
        <h4>Resultados da Busca</h4>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th scope="col">Mensagem</th>
                    <th scope="col">Remetente</th>
                    <th scope="col">Destinatário</th>
                    <th scope="col">Ações</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var recado in recados)
                {
                    <tr>
                        <td>@recado.Mensagem</td>
                        <td>@recado.Remetente</td>
                        <td>@recado.Destinatario</td>
                        <td>
                            <a href=@($"/recados/details/{recado.Id}") class="btn btn-secondary btn-sm">Consultar</a>
                            <a href=@($"/recados/edit/{recado.Id}") class="btn btn-warning btn-sm">Alterar</a>
                            <a href=@($"/recados/delete/{recado.Id}") class="btn btn-danger btn-sm">Excluir</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="text-danger">@errorMessage</div>
}

@code {
    private string? remetente;
    private string? destinatario;
    private RecModel recado = new();
    private IList<RecModel>? recados;
    private string errorMessage;

    private async Task ProcurarPorRemetente()
    {
        try
        {
            recados = await Http.GetFromJsonAsync<IList<RecModel>>($"https://localhost:7081/api/recadoes/remetente={remetente}");

                        
        }
        catch (Exception ex)
        {
            errorMessage = $"Erro ao procurar recado: não encontrado nenhum recado com o remetente pesquisado";
        }
    }
    private async Task ProcurarPorDestinatario()
    {
        try
        {
            recados = await Http.GetFromJsonAsync<IList<RecModel>>($"https://localhost:7081/api/recadoes/destinatario={destinatario}");

        }
        catch (Exception ex)
        {
            errorMessage = $"Erro ao procurar recado: não encontrado nenhum recado com o destinatário pesquisado";

        }
    }
}
